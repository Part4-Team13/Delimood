{
  "swaggerDoc": {
    "openapi": "3.0.0",
    "components": {
      "examples": {},
      "headers": {},
      "parameters": {},
      "requestBodies": {},
      "responses": {},
      "schemas": {
        "Id": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "Nickname": {
          "type": "string",
          "example": "닉네임",
          "minLength": 1,
          "maxLength": 30
        },
        "UrlType": {
          "type": "string",
          "example": "https://example.com/...",
          "format": "url",
          "pattern": "^https?://.+"
        },
        "User": {
          "properties": {
            "image": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UrlType"
                }
              ],
              "nullable": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "teamId": {
              "type": "string"
            },
            "nickname": {
              "$ref": "#/components/schemas/Nickname"
            },
            "id": {
              "$ref": "#/components/schemas/Id"
            }
          },
          "required": [
            "image",
            "updatedAt",
            "createdAt",
            "teamId",
            "nickname",
            "id"
          ],
          "type": "object"
        },
        "UpdateUserBody": {
          "properties": {
            "image": {
              "$ref": "#/components/schemas/UrlType"
            },
            "nickname": {
              "$ref": "#/components/schemas/Nickname"
            }
          },
          "type": "object"
        },
        "CommentContent": {
          "type": "string",
          "minLength": 1
        },
        "CommentType": {
          "properties": {
            "epigramId": {
              "type": "number",
              "format": "double"
            },
            "writer": {
              "properties": {
                "image": {
                  "type": "string",
                  "nullable": true
                },
                "nickname": {
                  "type": "string"
                },
                "id": {
                  "type": "number",
                  "format": "double"
                }
              },
              "required": [
                "image",
                "nickname",
                "id"
              ],
              "type": "object"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "isPrivate": {
              "type": "boolean"
            },
            "content": {
              "$ref": "#/components/schemas/CommentContent"
            },
            "id": {
              "type": "number",
              "format": "double"
            }
          },
          "required": [
            "epigramId",
            "writer",
            "updatedAt",
            "createdAt",
            "isPrivate",
            "content",
            "id"
          ],
          "type": "object"
        },
        "CursorBasedPaginationResponse_CommentType_": {
          "properties": {
            "totalCount": {
              "type": "number",
              "format": "double"
            },
            "nextCursor": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "list": {
              "items": {
                "$ref": "#/components/schemas/CommentType"
              },
              "type": "array"
            }
          },
          "required": [
            "totalCount",
            "nextCursor",
            "list"
          ],
          "type": "object"
        },
        "_36_Enums.OauthProvider": {
          "type": "string",
          "enum": [
            "GOOGLE",
            "NAVER",
            "KAKAO"
          ]
        },
        "OauthProvider": {
          "$ref": "#/components/schemas/_36_Enums.OauthProvider"
        },
        "AppKey": {
          "type": "string",
          "description": "간편 로그인을 위한 인증 키 입니다.\n\n* Google 의 경우에는 \"클라이언트 id\" 입니다.\n* Kakao 의 경우에는 \"REST API 키\" 입니다.\n* Naver 의 경우에는 \"Client ID\" 입니다.\n\n실습을 위해 발급받은 키를 등록해주세요. 실제 서비스에서 사용 하는 키는 등록하시면 안됩니다."
        },
        "AppSecret": {
          "type": "string",
          "description": "간편 로그인을 위한 비밀 키 입니다.\n\n* Google 의 경우에는 필요하지 않습니다.\n* Kakao 의 경우에는 필요하지 않습니다.\n* Naver 의 경우에는 \"Client Secret\" 입니다."
        },
        "OauthApp": {
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "appSecret": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/AppSecret"
                }
              ],
              "nullable": true
            },
            "appKey": {
              "$ref": "#/components/schemas/AppKey"
            },
            "provider": {
              "$ref": "#/components/schemas/OauthProvider"
            },
            "teamId": {
              "type": "string"
            },
            "id": {
              "$ref": "#/components/schemas/Id"
            }
          },
          "required": [
            "createdAt",
            "updatedAt",
            "appSecret",
            "appKey",
            "provider",
            "teamId",
            "id"
          ],
          "type": "object"
        },
        "UpsertOauthAppRequestBody": {
          "properties": {
            "appSecret": {
              "$ref": "#/components/schemas/AppSecret"
            },
            "appKey": {
              "$ref": "#/components/schemas/AppKey"
            },
            "provider": {
              "$ref": "#/components/schemas/OauthProvider"
            }
          },
          "required": [
            "appKey",
            "provider"
          ],
          "type": "object"
        },
        "EpigramContent": {
          "type": "string",
          "example": "에피그램 내용입니다.",
          "minLength": 1,
          "maxLength": 500
        },
        "EpigramAuthor": {
          "type": "string",
          "example": "저자",
          "minLength": 1,
          "maxLength": 30
        },
        "EpigramReferenceTitle": {
          "type": "string",
          "maxLength": 100
        },
        "TagName": {
          "type": "string",
          "example": "태그",
          "minLength": 1,
          "maxLength": 10
        },
        "EpigramListType": {
          "properties": {
            "likeCount": {
              "type": "number",
              "format": "double"
            },
            "tags": {
              "items": {
                "properties": {
                  "name": {
                    "$ref": "#/components/schemas/TagName"
                  },
                  "id": {
                    "$ref": "#/components/schemas/Id"
                  }
                },
                "required": [
                  "name",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "writerId": {
              "$ref": "#/components/schemas/Id"
            },
            "referenceUrl": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UrlType"
                }
              ],
              "nullable": true
            },
            "referenceTitle": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EpigramReferenceTitle"
                }
              ],
              "nullable": true
            },
            "author": {
              "$ref": "#/components/schemas/EpigramAuthor"
            },
            "content": {
              "$ref": "#/components/schemas/EpigramContent"
            },
            "id": {
              "$ref": "#/components/schemas/Id"
            }
          },
          "required": [
            "likeCount",
            "tags",
            "writerId",
            "referenceUrl",
            "referenceTitle",
            "author",
            "content",
            "id"
          ],
          "type": "object"
        },
        "CreateEpigramBody": {
          "properties": {
            "tags": {
              "items": {
                "$ref": "#/components/schemas/TagName"
              },
              "type": "array",
              "maxItems": 3
            },
            "referenceUrl": {
              "$ref": "#/components/schemas/UrlType"
            },
            "referenceTitle": {
              "$ref": "#/components/schemas/EpigramReferenceTitle"
            },
            "author": {
              "$ref": "#/components/schemas/EpigramAuthor"
            },
            "content": {
              "$ref": "#/components/schemas/EpigramContent"
            }
          },
          "required": [
            "tags",
            "author",
            "content"
          ],
          "type": "object"
        },
        "CursorBasedPaginationResponse_EpigramListType_": {
          "properties": {
            "totalCount": {
              "type": "number",
              "format": "double"
            },
            "nextCursor": {
              "type": "number",
              "format": "double",
              "nullable": true
            },
            "list": {
              "items": {
                "$ref": "#/components/schemas/EpigramListType"
              },
              "type": "array"
            }
          },
          "required": [
            "totalCount",
            "nextCursor",
            "list"
          ],
          "type": "object"
        },
        "EpigramDetailType": {
          "allOf": [
            {
              "$ref": "#/components/schemas/EpigramListType"
            },
            {
              "properties": {
                "isLiked": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          ]
        },
        "UpdateEpigramBody": {
          "properties": {
            "tags": {
              "items": {
                "$ref": "#/components/schemas/TagName"
              },
              "type": "array",
              "maxItems": 3
            },
            "referenceUrl": {
              "$ref": "#/components/schemas/UrlType"
            },
            "referenceTitle": {
              "$ref": "#/components/schemas/EpigramReferenceTitle"
            },
            "author": {
              "$ref": "#/components/schemas/EpigramAuthor"
            },
            "content": {
              "$ref": "#/components/schemas/EpigramContent"
            }
          },
          "type": "object"
        },
        "_36_Enums.Emotion": {
          "type": "string",
          "enum": [
            "MOVED",
            "HAPPY",
            "WORRIED",
            "SAD",
            "ANGRY"
          ]
        },
        "Emotion": {
          "$ref": "#/components/schemas/_36_Enums.Emotion"
        },
        "EmotionLogType": {
          "properties": {
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "emotion": {
              "$ref": "#/components/schemas/Emotion"
            },
            "userId": {
              "type": "number",
              "format": "double"
            },
            "id": {
              "type": "number",
              "format": "double"
            }
          },
          "required": [
            "createdAt",
            "emotion",
            "userId",
            "id"
          ],
          "type": "object"
        },
        "UpsertEmotionLogBody": {
          "properties": {
            "emotion": {
              "$ref": "#/components/schemas/Emotion"
            }
          },
          "required": [
            "emotion"
          ],
          "type": "object"
        },
        "Year": {
          "type": "number",
          "format": "double",
          "example": 2024
        },
        "Month": {
          "type": "number",
          "format": "double",
          "example": 1
        },
        "CreateCommentBody": {
          "properties": {
            "epigramId": {
              "type": "number",
              "format": "double"
            },
            "isPrivate": {
              "type": "boolean"
            },
            "content": {
              "$ref": "#/components/schemas/CommentContent"
            }
          },
          "required": [
            "epigramId",
            "isPrivate",
            "content"
          ],
          "type": "object"
        },
        "UpdateCommentBody": {
          "properties": {
            "isPrivate": {
              "type": "boolean"
            },
            "content": {
              "$ref": "#/components/schemas/CommentContent"
            }
          },
          "type": "object"
        },
        "Email": {
          "type": "string",
          "example": "example@email.com",
          "format": "email",
          "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
        },
        "SignUpResponse": {
          "properties": {
            "refreshToken": {
              "type": "string"
            },
            "accessToken": {
              "type": "string"
            },
            "user": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/User"
                },
                {
                  "properties": {
                    "email": {
                      "$ref": "#/components/schemas/Email"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          "required": [
            "refreshToken",
            "accessToken",
            "user"
          ],
          "type": "object"
        },
        "Password": {
          "type": "string",
          "example": "password",
          "minLength": 8,
          "pattern": "^([a-z]|[A-Z]|[0-9]|[!@#$%^&*])+$"
        },
        "SignUpRequestBody": {
          "properties": {
            "image": {
              "$ref": "#/components/schemas/UrlType"
            },
            "passwordConfirmation": {
              "$ref": "#/components/schemas/Password"
            },
            "password": {
              "$ref": "#/components/schemas/Password"
            },
            "nickname": {
              "$ref": "#/components/schemas/Nickname"
            },
            "email": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "required": [
            "passwordConfirmation",
            "password",
            "nickname",
            "email"
          ],
          "type": "object"
        },
        "SignInResponse": {
          "properties": {
            "refreshToken": {
              "type": "string"
            },
            "accessToken": {
              "type": "string"
            },
            "user": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/User"
                },
                {
                  "properties": {
                    "email": {
                      "$ref": "#/components/schemas/Email"
                    }
                  },
                  "required": [
                    "email"
                  ],
                  "type": "object"
                }
              ]
            }
          },
          "required": [
            "refreshToken",
            "accessToken",
            "user"
          ],
          "type": "object"
        },
        "SignInRequestBody": {
          "properties": {
            "password": {
              "$ref": "#/components/schemas/Password"
            },
            "email": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "required": [
            "password",
            "email"
          ],
          "type": "object"
        },
        "OauthToken": {
          "type": "string",
          "description": "간편 로그인 과정을 통해 발급받은 토큰입니다.<br />\n\n* Google 의 경우에는 <b>Google Id 토큰</b>(JWT) 입니다.\n* Kakao 의 경우에는 <b>인가 코드</b> 입니다.\n* Naver 의 경우에는 <b>code</b> 입니다."
        },
        "SignInWithOauthRequestBody": {
          "properties": {
            "state": {
              "type": "string",
              "description": "Naver 의 경우에는 필수입니다.<br/>\ncode를 얻을 때 사용하였던 state 값을 그대로 사용합니다."
            },
            "redirectUri": {
              "type": "string",
              "description": "Kakao 의 경우에는 필수입니다.<br/>\n인가 코드를 얻을 때 사용하였던 redirect_uri 값을 그대로 사용합니다.",
              "example": "http://localhost:3000/oauth/kakao"
            },
            "token": {
              "$ref": "#/components/schemas/OauthToken"
            }
          },
          "required": [
            "token"
          ],
          "type": "object"
        }
      },
      "securitySchemes": {
        "jwt": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    },
    "info": {
      "title": "epigram-api",
      "version": "1.0.0",
      "license": {
        "name": "ISC"
      },
      "contact": {}
    },
    "paths": {
      "/{teamId}/users/me": {
        "get": {
          "operationId": "Me",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "tags": [
            "User"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ]
        },
        "patch": {
          "operationId": "UpdatePassword",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "tags": [
            "User"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserBody"
                }
              }
            }
          }
        }
      },
      "/{teamId}/users/{id}": {
        "get": {
          "operationId": "RetrieveUser",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "tags": [
            "User"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/users/{id}/comments": {
        "get": {
          "operationId": "ListComments",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CursorBasedPaginationResponse_CommentType_"
                  }
                }
              }
            }
          },
          "description": "유저의 댓글 목록 조회",
          "tags": [
            "User"
          ],
          "security": [
            {
              "jwt": [
                "public"
              ]
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "cursor",
              "required": false,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/oauthApps": {
        "post": {
          "operationId": "UpsertOauthApp",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/OauthApp"
                  }
                }
              }
            }
          },
          "description": "간편 로그인 App 등록/수정<br/>\nGoogle, Kakao, Naver 간편 로그인을 위한 App 을 등록하거나 수정합니다.<br/>\n이미 등록된 앱이 있을 경우 덮어씌워집니다.\n\n## Google\n* appKey: <b>\"클라이언트 id\"</b>\n* appSecret: 필요하지 않음\n\n---\n\n## Kakao\n* appKey: <b>\"REST API 키\"</b>\n* appSecret: 필요하지 않음\n\n---\n\n## Naver\n* appKey: <b>\"Client ID\"</b>\n* appSecret: <b>\"Client Secret\"</b>\n\n---\n\n실습을 위해 발급받은 키를 등록해주세요. 실제 서비스에서 사용 하는 키를 등록해서는 안됩니다.",
          "tags": [
            "Oauth"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertOauthAppRequestBody"
                }
              }
            }
          }
        }
      },
      "/{teamId}/images/upload": {
        "post": {
          "operationId": "ImageUpload",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "이미지 업로드,\n프로젝트에 저장하는 이미지들은 이 엔드포인트를 통해 업로드한 후 URL을 획득하여 사용합니다.",
          "tags": [
            "Image"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string",
                      "format": "binary",
                      "description": "이미지 파일, 최대 용량은 5MB입니다."
                    }
                  },
                  "required": [
                    "image"
                  ]
                }
              }
            }
          }
        }
      },
      "/{teamId}/epigrams": {
        "post": {
          "operationId": "CreateEpigram",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EpigramListType"
                  }
                }
              }
            }
          },
          "description": "에피그램 작성",
          "tags": [
            "Epigram"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEpigramBody"
                }
              }
            }
          }
        },
        "get": {
          "operationId": "ListEpigrams",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CursorBasedPaginationResponse_EpigramListType_"
                  }
                }
              }
            }
          },
          "description": "에피그램 목록 조회",
          "tags": [
            "Epigram"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "페이지 당 에피그램 수",
              "in": "query",
              "name": "limit",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            },
            {
              "description": "페이지 커서",
              "in": "query",
              "name": "cursor",
              "required": false,
              "schema": {
                "format": "double",
                "type": "number"
              }
            },
            {
              "description": "검색 키워드",
              "in": "query",
              "name": "keyword",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "description": "작성자 ID 필터",
              "in": "query",
              "name": "writerId",
              "required": false,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/epigrams/today": {
        "get": {
          "operationId": "RetrieveTodayEpigram",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/EpigramDetailType"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "description": "오늘의 에피그램 조회",
          "tags": [
            "Epigram"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      "/{teamId}/epigrams/{id}": {
        "get": {
          "operationId": "RetrieveEpigram",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EpigramDetailType"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "에피그램 상세 조회",
          "tags": [
            "Epigram"
          ],
          "security": [
            {
              "jwt": [
                "public"
              ]
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        },
        "patch": {
          "operationId": "UpdateEpigram",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EpigramListType"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "에피그램 수정",
          "tags": [
            "Epigram"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateEpigramBody"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "DeleteEpigram",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "에피그램 삭제",
          "tags": [
            "Epigram"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/epigrams/{id}/like": {
        "post": {
          "operationId": "LikeEpigram",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EpigramDetailType"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "에피그램 좋아요",
          "tags": [
            "Epigram"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        },
        "delete": {
          "operationId": "UnlikeEpigram",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EpigramDetailType"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "에피그램 좋아요 취소",
          "tags": [
            "Epigram"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/epigrams/{id}/comments": {
        "get": {
          "operationId": "ListEpigramComments",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CursorBasedPaginationResponse_CommentType_"
                  }
                }
              }
            }
          },
          "description": "에피그램 댓글 목록 조회",
          "tags": [
            "Epigram"
          ],
          "security": [
            {
              "jwt": [
                "public"
              ]
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "cursor",
              "required": false,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/emotionLogs/today": {
        "post": {
          "operationId": "UpsertEmotionLog",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/EmotionLogType"
                  }
                }
              }
            }
          },
          "description": "오늘의 감정 저장",
          "tags": [
            "EmotionLog"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpsertEmotionLogBody"
                }
              }
            }
          }
        },
        "get": {
          "operationId": "GetTodayEmotionLog",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/EmotionLogType"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          },
          "description": "오늘의 감정 조회",
          "tags": [
            "EmotionLog"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "userId",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Id"
              }
            }
          ]
        }
      },
      "/{teamId}/emotionLogs/monthly": {
        "get": {
          "operationId": "GetMonthlyEmotionLog",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "items": {
                      "$ref": "#/components/schemas/EmotionLogType"
                    },
                    "type": "array"
                  }
                }
              }
            }
          },
          "description": "월별 감정 조회",
          "tags": [
            "EmotionLog"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "userId",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Id"
              }
            },
            {
              "in": "query",
              "name": "year",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Year"
              }
            },
            {
              "in": "query",
              "name": "month",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Month"
              }
            }
          ]
        }
      },
      "/{teamId}/comments": {
        "post": {
          "operationId": "CreateComment",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CommentType"
                  }
                }
              }
            }
          },
          "description": "댓글 작성",
          "tags": [
            "Comment"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCommentBody"
                }
              }
            }
          }
        },
        "get": {
          "operationId": "ListComments",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CursorBasedPaginationResponse_CommentType_"
                  }
                }
              }
            }
          },
          "description": "댓글 목록 조회",
          "tags": [
            "Comment"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "query",
              "name": "limit",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            },
            {
              "in": "query",
              "name": "cursor",
              "required": false,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/comments/{id}": {
        "patch": {
          "operationId": "UpdateComment",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CommentType"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "댓글 수정",
          "tags": [
            "Comment"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCommentBody"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "DeleteComment",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "double"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "댓글 삭제",
          "tags": [
            "Comment"
          ],
          "security": [
            {
              "jwt": []
            }
          ],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "id",
              "required": true,
              "schema": {
                "format": "double",
                "type": "number"
              }
            }
          ]
        }
      },
      "/{teamId}/auth/signUp": {
        "post": {
          "operationId": "SignUp",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignUpResponse"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "accessToken": "accessToken",
                        "refreshToken": "refreshToken",
                        "user": {
                          "id": 123,
                          "email": "example@email.com",
                          "nickname": "example",
                          "teamId": "teamId",
                          "updatedAt": "2024-07-11T01:56:39.419Z",
                          "createdAt": "2024-07-11T01:56:39.420Z",
                          "image": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "회원가입",
          "tags": [
            "Auth"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUpRequestBody"
                },
                "example": {
                  "email": "example@email.com",
                  "nickname": "nickname",
                  "password": "password",
                  "passwordConfirmation": "password"
                }
              }
            }
          }
        }
      },
      "/{teamId}/auth/signIn": {
        "post": {
          "operationId": "SignIn",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignInResponse"
                  },
                  "examples": {
                    "Example 1": {
                      "value": {
                        "accessToken": "accessToken",
                        "refreshToken": "refresh",
                        "user": {
                          "id": 123,
                          "email": "example@email.com",
                          "nickname": "example",
                          "teamId": "teamId",
                          "updatedAt": "2024-07-11T01:56:39.422Z",
                          "createdAt": "2024-07-11T01:56:39.422Z",
                          "image": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "로그인",
          "tags": [
            "Auth"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInRequestBody"
                },
                "example": {
                  "email": "example@email.com",
                  "password": "password"
                }
              }
            }
          }
        }
      },
      "/{teamId}/auth/refresh-token": {
        "post": {
          "operationId": "RefreshToken",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "accessToken": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "accessToken"
                    ],
                    "type": "object"
                  }
                }
              }
            }
          },
          "description": "토큰 갱신",
          "tags": [
            "Auth"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "refreshToken": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "refreshToken"
                  ],
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "/{teamId}/auth/signIn/{provider}": {
        "post": {
          "operationId": "SignInWithOauth",
          "responses": {
            "200": {
              "description": "Ok",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignInResponse"
                  }
                }
              }
            }
          },
          "description": "간편 로그인\n\n가입되어있지 않을 경우엔 가입됩니다.",
          "tags": [
            "Auth"
          ],
          "security": [],
          "parameters": [
            {
              "in": "path",
              "name": "teamId",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "in": "path",
              "name": "provider",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/OauthProvider"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInWithOauthRequestBody"
                }
              }
            }
          }
        }
      }
    },
    "servers": [
      {
        "url": "/"
      }
    ]
  },
  "customOptions": {}
}
